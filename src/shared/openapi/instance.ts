import createFetchClient from 'openapi-fetch';
import createClient from 'openapi-react-query';

import type { paths } from './generated'; // generated by openapi-typescript
import type { ApiSchemas } from './schema';
import { envResolver } from '../env/env.resolver';
import { useSession } from '../session/session';

export const fetchClient = createFetchClient<paths>({
  baseUrl: envResolver.VITE_API_BASE_URL,
});
export const rqClient = createClient(fetchClient);

fetchClient.use({
  async onRequest({ request }) {
    const token = await useSession.getState().refreshToken();
    if (token) {
      request.headers.set('Authorization', `Bearer ${token}`);
    } else {
      return new Response(
        JSON.stringify({
          code: 'NOT AUTH',
          message: 'Ошибка аутентификации',
        } as ApiSchemas['Error']),
        {
          status: 401,
          headers: { 'Content-Type': 'application/json' },
        }
      );
    }
  },
});

export const publicFetchClient = createFetchClient<paths>({
  baseUrl: envResolver.VITE_API_BASE_URL,
});
export const publicRqClient = createClient(publicFetchClient);
